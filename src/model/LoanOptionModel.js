/**
 * YouLend Third Party Onboarding API
 * Through this API you can can initiate the process of onboarding a borrower with YouLend
 *
 * The version of the OpenAPI document: 1.0
 * Contact: mark.ufland@youlend.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LoanOptionModel model module.
 * @module model/LoanOptionModel
 * @version 1.0
 */
class LoanOptionModel {
    /**
     * Constructs a new <code>LoanOptionModel</code>.
     * A model containing data about a loan option
     * @alias module:model/LoanOptionModel
     */
    constructor() { 
        
        LoanOptionModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LoanOptionModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LoanOptionModel} obj Optional instance to populate.
     * @return {module:model/LoanOptionModel} The populated <code>LoanOptionModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LoanOptionModel();

            if (data.hasOwnProperty('fundedAmount')) {
                obj['fundedAmount'] = ApiClient.convertToType(data['fundedAmount'], 'Number');
            }
            if (data.hasOwnProperty('fee')) {
                obj['fee'] = ApiClient.convertToType(data['fee'], 'Number');
            }
            if (data.hasOwnProperty('loanAmount')) {
                obj['loanAmount'] = ApiClient.convertToType(data['loanAmount'], 'Number');
            }
            if (data.hasOwnProperty('sweep')) {
                obj['sweep'] = ApiClient.convertToType(data['sweep'], 'Number');
            }
            if (data.hasOwnProperty('calculatedFundedAmount')) {
                obj['calculatedFundedAmount'] = ApiClient.convertToType(data['calculatedFundedAmount'], 'Number');
            }
            if (data.hasOwnProperty('calculatedFee')) {
                obj['calculatedFee'] = ApiClient.convertToType(data['calculatedFee'], 'Number');
            }
            if (data.hasOwnProperty('calculatedLoanAmount')) {
                obj['calculatedLoanAmount'] = ApiClient.convertToType(data['calculatedLoanAmount'], 'Number');
            }
            if (data.hasOwnProperty('calculatedSweep')) {
                obj['calculatedSweep'] = ApiClient.convertToType(data['calculatedSweep'], 'Number');
            }
            if (data.hasOwnProperty('currencyCode')) {
                obj['currencyCode'] = ApiClient.convertToType(data['currencyCode'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Gets or sets the (rounded up) funding amount for the loan option
 * @member {Number} fundedAmount
 */
LoanOptionModel.prototype['fundedAmount'] = undefined;

/**
 * Gets or sets the (rounded up) fee for the loan option, which is the difference between funded amount and the amount that the borrower repays
 * @member {Number} fee
 */
LoanOptionModel.prototype['fee'] = undefined;

/**
 * Gets or sets the (rounded up) loan amount, which is the amount that the borrower repays
 * @member {Number} loanAmount
 */
LoanOptionModel.prototype['loanAmount'] = undefined;

/**
 * Gets or sets the (rounded up) sweep, which is the percentage of the settlement amount that is allocated towards repaying the loan
 * @member {Number} sweep
 */
LoanOptionModel.prototype['sweep'] = undefined;

/**
 * Gets or sets the calculated funding amount for the loan option
 * @member {Number} calculatedFundedAmount
 */
LoanOptionModel.prototype['calculatedFundedAmount'] = undefined;

/**
 * Gets or sets the calculated fee for the loan option, which is the difference between funded amount and the amount that the borrower repays
 * @member {Number} calculatedFee
 */
LoanOptionModel.prototype['calculatedFee'] = undefined;

/**
 * Gets or sets the calculated loan amount, which is the amount that the borrower repays
 * @member {Number} calculatedLoanAmount
 */
LoanOptionModel.prototype['calculatedLoanAmount'] = undefined;

/**
 * Gets or sets the calculated sweep, which is the percentage of the settlement amount that is allocated towards repaying the loan
 * @member {Number} calculatedSweep
 */
LoanOptionModel.prototype['calculatedSweep'] = undefined;

/**
 * Gets or sets the currency code for the loan option
 * @member {String} currencyCode
 */
LoanOptionModel.prototype['currencyCode'] = undefined;






export default LoanOptionModel;

